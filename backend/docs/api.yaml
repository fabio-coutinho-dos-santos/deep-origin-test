openapi: 3.0.0
info:
  title: Sigap Backend API
  description: Sigap Backend API
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: local
  - url: https://deep-origin-test.onrender.com
    description: production

paths:
  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: Login
      description: Login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "admin"
                email:
                  type: string
                  example: "admin@gmail.com"
                password:
                  type: string
                  example: "password"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/v1/users/register:
    post:
      tags:
        - Users
      summary: Register
      description: Register
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "user"
                password:
                  type: string
                  example: "password"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/v1/urls/shortened/create:
    post:
      tags:
        - Urls
      summary: Create Shortened Url
      description: Create Shortened Url
      operationId: createShortenedUrl
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: "https://www.google.com"
                userId:
                  type: number
                  example: 1

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  original:
                    type: string
                    example: "https://www.google.com"
                  shortened:
                    type: string
                    example: "http://localhost:3000/abc3e4"
                  hits:
                    type: number
                    example: 0
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/v1/urls/all:
    get:
      tags:
        - Urls
      summary: Get All Urls
      description: Get All Urls
      operationId: getAllUrls
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    original:
                      type: string
                      example: "https://www.google.com"
                    shortened:
                      type: string
                      example: "http://localhost:3000/abc3e4"
                    hits:
                      type: number
                      example: 0
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /{shortened}:
    get:
      tags:
        - Urls
      summary: Redirect Url
      description: Redirect Url
      operationId: redirectUrl
      parameters:
        - name: shortened
          in: path
          required: true
          schema:
            type: string
          example: "abc3e4"
      responses:
        "200":
          description: Success
        "404":
          description: Not Found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIiLCJpYXQiOjE1MTYyMzkwMjJ9.4TJok"
        expiresIn:
          type: number
          example: 3600
        user:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: "user"
            email:
              type: string
              example: "admin@gmail.com"

    UserResponse:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "user"
        email:
          type: string
          example: "admin@gmail.com"
