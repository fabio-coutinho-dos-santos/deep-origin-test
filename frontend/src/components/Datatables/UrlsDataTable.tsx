import React, { useState } from "react";
import DataTable, { TableColumn } from "react-data-table-component";
import { CONSTANTS } from "../../config/constants";
import { useAuth } from "../../contexts/AuthContext";
import { FaRegCopy } from 'react-icons/fa';

export interface Urls {
  original: string;
  shortened: string;
  hits: number;
}

const UrlsDataTable: React.FC<{ urls: Urls[] }> = ({ urls }) => {
  const { userName } = useAuth();
  const [showToast, setShowToast] = useState(false);

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
    setShowToast(true);
    setTimeout(() => setShowToast(false), 1000);
  };

  const columns: TableColumn<Urls>[] = [
    {
      name: "Original",
      selector: (row) => row.original,
      sortable: true,
      width: "30rem",
    },
    {
      name: "Shortened",
      cell: (row) => {
        const fullUrl = `${CONSTANTS.url.host}/${row.shortened}`;
        return (
          <div style={{ display: "flex", alignItems: "center", gap: "10px" }}>
            <span onClick={() => copyToClipboard(fullUrl)}
            >{fullUrl}</span>
            <FaRegCopy
              onClick={() => copyToClipboard(fullUrl)}
              style={{ cursor: "pointer", color: "#2e4053" }}
              title="Copy to clipboard"
            />
          </div>
        );
      },
      sortable: true,
    },
    {
      name: "Hits",
      selector: (row) => row.hits,
      sortable: true,
    }
  ];

  const customStyles = {
    table: {
      style: {
        boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)",
        backgroundColor: "#f9f9f9",
        borderRadius: "8px",
      },
    },
    headRow: {
      style: {
        backgroundColor: "#2e4053",
        color: "white",
        fontWeight: "bold",
        fontSize: "16px",
      },
    },
    rows: {
      style: {
        backgroundColor: "#ffffff",
        "&:nth-of-type(odd)": {
          backgroundColor: "#f2f2f2",
        },
      },
    },
    pagination: {
      style: {
        boxShadow: "0 2px 4px rgba(0, 0, 0, 0.1)",
      },
    },
  };

  return (
    <div>
      {showToast && (
        <div
          className="position-fixed  bottom-0 end-0 m-3 toast show"
          role="alert"
          style={{
            zIndex: 9999,
          }}
        >
          <div className="toast-body bg-success text-white p-3 rounded">
            âœ… Copied
          </div>
        </div>
      )}

      <DataTable
        title={
          <h4 style={{ color: "#000", fontWeight: "bold" }}>
            ðŸš€ Shortened generated by {userName?.split(" ")[0] ?? "User"}
          </h4>
        }
        columns={columns}
        data={urls}
        pagination
        customStyles={customStyles}
        paginationPerPage={5}
        paginationRowsPerPageOptions={[5, 10, 15, 20, 25, 30]}
      />
    </div>
  );
};

export default UrlsDataTable;
